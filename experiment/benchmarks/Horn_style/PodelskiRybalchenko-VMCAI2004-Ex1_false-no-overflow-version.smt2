(declare-rel inv (Int Int Int Int))
(declare-var i Int)
(declare-var i1 Int)
(declare-var j Int)
(declare-var j1 Int)
(declare-var a Int)
(declare-var a1 Int)
(declare-var b Int)
(declare-var b1 Int)
(declare-var nondetNat1 Int)
(declare-var nondetPos1 Int)
(declare-var nondetNat Int)
(declare-var nondetPos Int)

(rule (inv i j a b))

(rule (=> 
    (and 
        (inv i j a b)
        (>= (+ i a (- j) (- b)) 1)
        (>= nondetNat 0)
        (>= nondetNat1 0)
        (> nondetPos 0)
        (> nondetPos1 0)
        (= i1 (- i nondetNat))
        (= j1 (+ j nondetPos))
        (= a1 (- a nondetNat1))
        (= b1 (+ b nondetPos1))
    )
    (inv i1 j1 a1 b1)
  )
)
